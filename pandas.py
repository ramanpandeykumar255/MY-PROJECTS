# -*- coding: utf-8 -*-
"""Pandas.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1us9yWP3Nrk7TyWM5sgpcgxXYvEfHkUpm
"""

# PANDAS:
# it is used to perform data analysis and manipulation
#Pandas is also a open sourse libraray

# Why Pandas;
# Pandas is a python package that provies fast,flexible,and
# expressive data structures designed to make working with "relational" or "labeled" data both easy and intutive.
# it provides the ability to work with tabular data.
# tabular data : the data which is having rows and colums

!pip install pandas

import pandas as pd

# Series: Series is a one dimentional labbeled arrays

sub = ["HTML","CSS","Python","Django","SQL","Maths","Science"]

ser = pd.Series(data =sub)

ser

type(ser)

ser

ser[3]

ser[4]

ser[1]

ser.index = ["p","q","r","s","t","u","v"]

ser

ser["t"]

ser[4]

type(ser)



# DataFrame ; 2D Labelled arrys is known as data frame which is having label and colums.
# if we combine multiple series we will be getting Dataframe
# it is a most widely used data structure

import numpy as np

arr = np.random.randint(10,100,size = (8,6))

df = pd.DataFrame(data = arr)

type(df)

df.shape

df.dtypes

"a b c d e f g h ".split()

df.index = "a b c d e f g h ".split()

df

df.columns = ["p","q","r","s","t","u"]

df

df.columns

df.index

df["r"]

import numpy as np
import pandas as pd
arr = np.random.randint(10,100,size = (8,6))
df = pd.DataFrame(arr)

df

df.columns = ["p","q","r","s","t","u"]

df["r"]

df["s"]

# for extracting row
# loc
# iloc
df.iloc[2]

df.iloc[3]

df["t"]

df.index = "a b c d e f g h ".split()

df.loc["d"]

df.iloc[3]

df.iloc[1:3,1:3]

df.iloc[0:2,-3:-1]

df.iloc[0,0]

df.iloc[5:7,2:4]

df.iloc[-3:-1,-4:-2]

df.iloc[:-2]

df.head()

df.head(n=3)

df.head(n=2)

df.tail()

df.tail(n=2)

df["v"] = 100

df["w"] = df["p"] + df["q"]

df

df = df.drop("q",axis = 1)

df

df.drop(columns="v",inplace = True)

df

df.drop(labels ="b",inplace=True)

df

df = df.drop(index = "e")

df

#Masking : Boolean Indexing ; True,False

df>50

df<60

df["p"]

df.p

df.r>= 50

df>60

df[df>60]

df[~(df>60)]

df["q"] >30

df.s <60

(df["q"] > 30) & (df.s <60)

df[(df["q"]>30)& (df.s <60)][["q","r","s"]]

new_array = df.values
new_array

df = pd.read_csv("https://gist.githubusercontent.com/curran/a08a1080b88344b0c8a7/raw/0e7a9b0a5d22642a06d3d5b9bcbad9890c8ee534/iris.csv")

df["species"]

df.species.nunique()

df.species.unique()

df

df.species =="setosa"

df[df.species == "setosa"]

virginica = df[df.species == "virginica"]

virginica.shape

# arregate Function

df.sepal_length.min()

df.petal_length.max()

df.sepal_width.sum()

import numpy as np

np.round(df.petal_width.mean(),3)

#sorting

df.sort_values(by = "sepal_length",inplace=True)

df=df.sort_index()

df

df.sort_values(by = "sepal_length",ascending=False)

df.sort_values(by = ["sepal_length","sepal_width"],ascending=[True,False])

df.sort_values(by=["sepal_length","sepal_width"],ascending=[False,True])

# Apply

df["species_length"] = df.species.apply(len)

df

df.sepal_width = df.sepal_width.apply(lambda s:s*2)

df

def double(g):
  return g+g

double(1567)

df.apply(func=double)

pip install pandas

pip install numpy

import pandas as pd

df_profit = pd.read_excel("account.xlsx")[:10]











def replacebracket(d):
  return d.split('[')[0].strip()

p = "Bermuda[2]"

replacebracket(p)

df_b.Country = df



# grouping data together

df.head